#+title: Mycmd Planning

* Milestones
** 0.1 Release

This will be the release with full CI working.

*** Clean Up and Conventions
**** TODO Evaluate all uses of =mycmd.debug=, =mycmd.trace=, and =mycmd.log=. Define a standard of when to use what and update things to match.
**** TODO Finalize coding standards and fix any breakage
**** TODO Evaluate if there is a way to ensure class invariants, i.e. the parallel assoc arrays are in sync
**** TODO Audit support library loading

*** Continuous Integration
**** TODO Using =mycmd= and =mycmd/project= to build itself in GitHub Actions
**** TODO Tests and Linters Running in GitHub Actions
**** TODO Pull Request workflow configured with GitHub Actions that creates snapshot tags

*** Documentation
**** TODO Add documentation comments for the registry
**** TODO User documentation for =mycmd= use
**** TODO Documentation for MyCmd command group and command authors
**** TODO Release announcement video

*** Features and Bugs
**** DONE Add support for reading snapshot info for versions
**** TODO Fix =mycmd.init_bin= to work all at once
**** TODO =mycmd/create= Command Group for creating new command groups and commands from templates
**** TODO =mycmd/logging= works correctly on Mac OS and Linux
**** TODO Feature detection for Bash version requirements
**** TODO Metadata caching for command groups and commands
**** TODO Gracefully handle inability to create log files
**** TODO Add full help text for =mycmd= Command Group
**** TODO Potentially support more than two columns in =mycmd.print_table=

*** Installation
**** TODO Installation Shell Script and Instructions

*** Interactive Shell Integration
**** TODO Zsh completion support
**** TODO Bash Completion Support
**** TODO Fish Completion Support
**** TODO =mycmd/shell= Command Group for shell integration

*** Project Task Runner
**** TODO Separate =mycmd/project= into its own project
**** TODO Out of band =myproject= files for work projects
**** TODO =project.find_files_for_filset= should be additive
**** TODO Validate MYPROJECT_BASE_DIR gets set correctly when not run from project root
**** TODO =project.find_files_for_filset= should support symlinks and files with spaces in them

*** Project Tasks
**** DONE Convert =nullglob-wrapper= in MyCmd's =myproject= to use the ones from pathname
**** DONE Use =mycmd-formatted_output-lib= in MyCmd's =myproject=
**** DONE Add tasks for executing specific tests
**** DONE Fix =project.list-files= to handle spaces in names
**** TODO Get a better source code line counter integrated
**** TODO Get local git hooks set up and working
**** TODO Use log rotation for MyCmd test logs
**** TODO Fix =myproject= filesets to handle non-shell files
**** TODO Add linting and formatting tasks for Python files

** Post 0.1 Release
*** TODO Rewrite =mycmd/sessions= into its own project
*** TODO Figure out Test Coverage
*** TODO Better support for executing commands and =mycmd/project= tasks in Emacs with something outside my own dotfiles
*** TODO Providing packages for MyCmd for package managers
*** TODO Potentially own Homebrew tap for installing with Homebrew
*** TODO Mise plugin for MyCmd?
*** TODO Support for custom completion for commands
*** TODO Add MyCmd to [[https://github.com/oils-for-unix/oils/wiki/The-Biggest-Shell-Programs-in-the-World][The Biggest Shell Programs in the World]]

* Side Quests
** =bashdoc=

Build [[https://github.com/travisbhartwell/bashdoc][bashdoc]] to generate API docs for the public APIs that MyCmd command group and command writers will use.

** Internal Dependency Analysis and Linting

Write tools to analysis the dependencies between the different MyCmd support libraries to:
- minimize the functions to just those needed
- each support library only loads the libraries it needs
- there are no circular dependencies

This could include:
- a linter
- visualization of dependencies with graphviz
- call graphs

** General Linters

I should establish strict naming conventions for functions and variables and then implement linters to ensure that I keep to those standards.

Also, I should see if there are ways to instrument this to make sure I am not accidentally leaking local variables anywhere.

* Ideas
** Are there diagrams I can create about MyCmd's structure that would help?

* Bugs

* Tasks

* Development Log Entries
** TODO 0.1 Release Announcement
** TODO Higher Order Functions in Bash
** TODO Pseudo-structs
** TODO Safety Guarantees in MyCmd
** TODO How MyCmd commands are executed
** TODO How I use git worktrees in development
** TODO Profiling Shell Script Execution
** TODO Testing
** TODO Output Capture and Logging
** TODO General feature discussions
