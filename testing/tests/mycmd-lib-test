#!/usr/bin/env bash
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

if ! TESTS_DIRECTORY=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching tests directory."
    exit 1
fi
readonly TESTS_DIRECTORY

source "${TESTS_DIRECTORY}/testing-support-lib"

# ------------------------------------------------------------------------------
# Verify that MyCmb Lib and each of the Support Libraries are Loaded, Including Transitive Dependencies
#
# These tests are in order of:
# - first, things that are directly loaded by mycmd-lib
# - then, things that are loaded by the directly loaded libraries
function test_mycmd_lib_is_loaded() {
    assertTrue 'MyCmd Lib is loaded' '[ -v _MYCMD_LIB ]'
}

function test_mycmd_loading_lib_is_loaded() {
    assertTrue 'MyCmd Loading Support Lib is loaded' '[ -v _MYCMD_LOADING_LIB ]'
}

function test_mycmd_output_lib_is_loaded() {
    assertTrue 'MyCmd Output Lib is loaded' '[ -v _MYCMD_OUTPUT_LIB ]'
}

function test_mycmd_formatted_output_lib_is_loaded() {
    assertTrue 'MyCmd Formatted Output Lib is laoded' '[ -v _MYCMD_FORMATTED_OUTPUT_LIB ]'
}

function test_mycmd_environment_lib_is_loaded() {
    assertTrue 'MyCmd Environment Lib is loaded' '[ -v _MYCMD_ENVIRONMENT_LIB ]'
}

function test_mycmd_event_lifecycle_lib_is_loaded() {
    assertTrue 'MyCmd Event Lifecycle Lib is loaded' '[ -v _MYCMD_EVENT_LIFECYCLE_LIB ]'
}

function test_mycmd_platform_support_lib_is_loaded() {
    assertTrue 'MyCmd Platform Support Lib is loaded' '[ -v _MYCMD_PLATFORM_SUPPORT_LIB ]'
}

function test_mycmd_pathname_lib_is_loaded() {
    assertTrue 'MyCmd Pathname Support Lib is loaded' '[ -v _MYCMD_PATHNAME_LIB ]'
}

function test_mycmd_registry_lib_is_loaded() {
    assertTrue 'MyCmd Lib Registry Lib is loaded' '[ -v _MYCMD_REGISTRY_LIB ]'
}

function test_mycmd_command_group_lib_is_loaded() {
    assertTrue 'MyCmd Command Group Lib is loaded' '[ -v _MYCMD_COMMAND_GROUP_LIB ]'
}

function test_mycmd_command_lib_is_loaded() {
    assertTrue 'MyCmd Command Lib is loaded' '[ -v _MYCMD_COMMAND_LIB ]'
}

# Transitive Dependencies
function test_mycmd_loading_base_lib_is_loaded() {
    assertTrue 'MyCmd Loading Base Lib is loaded' '[ -v _MYCMD_LOADING_BASE_LIB ]'
}

function test_mycmd_event_base_lib_is_loaded() {
    assertTrue 'MyCmd Event Base Lib is loaded' '[ -v _MYCMD_EVENT_BASE_LIB ]'
}

function test_mycmd_vendoring_lib_is_loaded() {
    assertTrue 'MyCmd Vendoring Lib is loaded' '[ -v _MYCMD_VENDORING_LIB ]'
}

function test_mycmd_function_calling_lib_is_loaded() {
    assertTrue 'MyCmd Function Calling Lib is loaded' '[ -v _MYCMD_FUNCTION_CALLING_LIB ]'
}

# shellcheck disable=SC2154
function oneTimeSetUp() {
    start_tracing

    # shellcheck source=../../mycmd/mycmd-lib
    . "${MYCMD_LIB_DIRECTORY}/mycmd-lib"
}

function oneTimeTearDown() {
    cleanup_tracing
}

# shellcheck disable=SC2154 source=../vendor/shunit2
. "${TESTING_VENDOR_DIRECTORY}/shunit2"
