#!/usr/bin/env bash
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

if ! TESTS_DIRECTORY=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching tests directory."
    exit 1
fi
readonly TESTS_DIRECTORY

source "${TESTS_DIRECTORY}/testing-support-lib"

function test_mycmd_vendoring_lib_is_loaded() {
    assertTrue 'MyCmd Vendoring Support Lib is loaded' '[ -v _MYCMD_VENDORING_LIB ]'
}

function test_successfully_loading_vendored_library() {
    assertTrue 'The ansi vendored library can be loaded' 'mycmd.load_vendor_library ansi'
    assertTrue 'The ansi function is now available' 'declare -F "ansi" >/dev/null'
}

function test_failing_loading_vendored_library() {
    assertFalse 'A non-existing vendored library cannot be loaded' 'mycmd.load_vendor_library does-not-exist'
}

function oneTimeSetUp() {
    start_tracing_and_capture_output_for_non_snapshot_tests

    # shellcheck disable=SC2154 source=../../mycmd/mycmd-vendoring-lib
    . "${MYCMD_LIB_DIRECTORY}/mycmd-vendoring-lib"
}

function oneTimeTearDown() {
    cleanup_tracing
}

# shellcheck disable=SC2154 source=../vendor/shunit2
. "${TESTING_VENDOR_DIRECTORY}/shunit2"
