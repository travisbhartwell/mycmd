#!/usr/bin/env bash
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash disable=SC2317

if ! TEST_DIRECTORY=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching test directory."
    exit 1
fi

if ! TEST_VENDOR_DIRECTORY=$(cd "${TEST_DIRECTORY}/../vendor" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching test vendor directory."
    exit 1
fi

if ! TEST_USER_LIB_DIRECTORY=$(cd "${TEST_DIRECTORY}/../user-base" && pwd -P); then
    echo >&2 "Error fetching test user base directory."
    exit 1
fi

if ! MYCMD_LIB_DIRECTORY=$(cd "${TEST_DIRECTORY}/../../mycmd" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching MyCmd lib directory."
    exit 1
fi

if ! ADDITIONAL_BASE=$(cd "${TEST_DIRECTORY}/../additional-base" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching additional base directory."
    exit 1
fi

# Set this to disable setting _MYCMD_SEARCH_PATH read-only
_MYCMD_TESTING=1

function test_mycmd_environment_lib_is_loaded() {
    assertTrue 'MyCmd Environment Support Lib is loaded' '[ -v _MYCMD_ENVIRONMENT_LIB ]'
}

function test_mycmd_search_path_is_not_set() {
    assertTrue 'MYCMD_SEARCH_PATH is not set' '[ ! -v MYCMD_SEARCH_PATH ]'
}

# shellcheck disable=SC2312
function test_get_absolute_path() {
    assertFalse '/non-existing does not exist' \
        'mycmd:environment._get_absolute_path /non-existing'

    assertSame "${TEST_USER_LIB_DIRECTORY}" \
        "$(mycmd:environment._get_absolute_path "${TEST_DIRECTORY}/../user-base")"
}

# shellcheck disable=SC2016,SC2153,SC2154
function test_set_mycmd_search_path_with_no_custom_search_path() {
    assertTrue 'MYCMD_SEARCH_PATH is not set' \
        '[ ! -v MYCMD_SEARCH_PATH ]'

    assertTrue 'set_mycmd_search_path runs successfully' \
        'mycmd:environment.set_mycmd_search_path'

    assertTrue '_MYCMD_SEARCH_PATH has two elements' \
        '(( "${#_MYCMD_SEARCH_PATH[@]}" == 2 ))'
    assertSame "first element is ${MYCMD_LIB_DIRECTORY}" \
        "${MYCMD_LIB_DIRECTORY}" \
        "${_MYCMD_SEARCH_PATH[0]}"
    assertSame "second element is ${TEST_USER_LIB_DIRECTORY}" \
        "${TEST_USER_LIB_DIRECTORY}" \
        "${_MYCMD_SEARCH_PATH[1]}"
}

# shellcheck disable=SC2016,SC2034,SC2153,SC2154
function test_set_mycmd_search_path_with_custom_search_path() {
    MYCMD_SEARCH_PATH="${TEST_USER_LIB_DIRECTORY}:${TEST_USER_LIB_DIRECTORY}/../additional-base:${MYCMD_LIB_DIRECTORY}:/non-existing"

    assertTrue 'MYCMD_SEARCH_PATH is set' \
        '[ -v MYCMD_SEARCH_PATH ]'

    assertTrue 'set_mycmd_search_path runs successfully' \
        'mycmd:environment.set_mycmd_search_path'

    assertTrue '_MYCMD_SEARCH_PATH has three elements' \
        '(( "${#_MYCMD_SEARCH_PATH[@]}" == 3 ))'
    assertSame "first element is ${MYCMD_LIB_DIRECTORY}" \
        "${MYCMD_LIB_DIRECTORY}" \
        "${_MYCMD_SEARCH_PATH[0]}"
    assertSame "second element is ${ADDITIONAL_BASE}" \
        "${ADDITIONAL_BASE}" \
        "${_MYCMD_SEARCH_PATH[1]}"
    assertSame "third element is ${TEST_USER_LIB_DIRECTORY}" \
        "${TEST_USER_LIB_DIRECTORY}" \
        "${_MYCMD_SEARCH_PATH[2]}"
}

function oneTimeSetUp() {
    # shellcheck source=../../mycmd/mycmd-environment-lib
    . "${MYCMD_LIB_DIRECTORY}/mycmd-environment-lib"
}

# shellcheck source=../vendor/shunit2
. "${TEST_VENDOR_DIRECTORY}/shunit2"
