# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

# MyCmd Library Environment Support Library
#   Support for Shell Environment Validation Functions for MyCmd

set -o nounset -o errexit -o errtrace -o pipefail

(return 0 >/dev/null 2>&1) || {
    echo >&2 "$0 is a library only meant to be sourced."
    exit 1
}

[[ -n "${_MYCMD_ENVIRONMENT_LIB:-}" ]] && return
readonly _MYCMD_ENVIRONMENT_LIB=1

if [[ ! -v _MYCMD_LIB_DIR ]]; then
    readonly _MYCMD_ENVIRONMENT_LIB_SELF_FILE="${BASH_SOURCE[0]}"
    _MYCMD_LIB_DIR=$(cd "$(dirname "${_MYCMD_ENVIRONMENT_LIB_SELF_FILE}")" &>/dev/null && pwd -P)
    readonly _MYCMD_LIB_DIR
fi

# ------------------------------------------------------------------------------
# Source Required Support Libraries

# shellcheck source=./mycmd-output-lib
source "${_MYCMD_LIB_DIR}/mycmd-output-lib"

# ------------------------------------------------------------------------------
# Validate environment
if [[ -z "${MYCMD_SYSTEM_BASE_DIR-}" ]]; then
    mycmd.err_exit 1 "Required environment variable MYCMD_SYSTEM_BASE_DIR is not set."
fi

if [[ ! -d "${MYCMD_SYSTEM_BASE_DIR}" ]]; then
    mycmd.err_exit 1 "Required directory referenced in environment variable MYCMD_SYSTEM_BASE_DIR, '${MYCMD_SYSTEM_BASE_DIR}' does not exist."
fi
mycmd.trace "MYCMD_SYSTEM_BASE_DIR: ${MYCMD_SYSTEM_BASE_DIR}"

if [[ -z "${MYCMD_USER_BASE_DIR-}" ]]; then
    mycmd.err_exit 1 "Required environment variable MYCMD_USER_BASE_DIR is not set."
fi

if [[ ! -d "${MYCMD_USER_BASE_DIR}" ]]; then
    mycmd.err_exit 1 "Required directory referenced in environment variable MYCMD_USER_BASE_DIR, '${MYCMD_USER_BASE_DIR}' does not exist."
fi
mycmd.trace "MYCMD_USER_BASE_DIR:   ${MYCMD_USER_BASE_DIR}"

if [[ -z "${MYCMD_VENDOR_DIR-}" ]]; then
    mycmd.err_exit 1 "Required environment variable MYCMD_VENDOR_DIR is not set."
fi

if [[ ! -d "${MYCMD_VENDOR_DIR}" ]]; then
    mycmd.err_exit 1 "Required directory referenced in environment variable MYCMD_VENDOR_DIR, '${MYCMD_VENDOR_DIR}' does not exist."
fi
mycmd.trace "MYCMD_VENDOR_DIR:      ${MYCMD_VENDOR_DIR}"

mycmd.trace "The MyCmd Library Environment support library has been sourced."
