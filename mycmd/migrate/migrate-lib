# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

# MyCmd Migrate Command Group Library
#   Library for migrating new MyCmd command groups and commands to work with the new style

# Set Bash options for safety
set -o nounset -o errexit -o errtrace -o pipefail

(return 0 >/dev/null 2>&1) || {
    echo >&2 "$0 is a library only meant to be sourced."
    exit 1
}

[[ -n "${_MYCMD_MIGRATE_LIB:-}" ]] && return
readonly _MYCMD_MIGRATE_LIB=1

# We will be using sed everywhere
mycmd.defer_at_startup mycmd.init_bin sed

function migrate.enforce-command-group-file-mode-line() {
    local -r command_group_file="${1}"

    mycmd.bin_execute sed -i \
        "1s/.*/# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-/" \
        "${command_group_file}"
}

function migrate.remove-unnecessary-comments() {
    local -r command_group_file="${1}"

    mycmd.bin_execute sed -i \
        -e "/# This file should only be sourced and not executed directly, so exit with error/d" \
        -e "/# with execution is attempted. Technique borrowed from/d" \
        -e "/# https:\/\/stackoverflow.com\/a\/28776166/d" \
        -e "/# This library should only be sourced once. Technique borrowed from/d" \
        -e "/# https:\/\/stackoverflow.com\/a\/64534652/d" \
        "${command_group_file}"
}

function migrate.enforce-library-pragma-double-bracket() {
    local -r command_group_file="${1}"

    mycmd.bin_execute sed -r -i \
        's/\[ -n "(.*+)" \] \&\& return/\[\[ -n "\1" \]\] \&\& return/g' \
        "${command_group_file}"
}

function migrate.enforce-using-function-keyword() {
    local -r file="${1}"

    mycmd.bin_execute sed -r -i \
        's/^([^ ]+)\(\) \{/function \1() {/p' \
        "${file}"
}

function migrate.enforce-command-shebang-and-mode-line() {
    local -r command_file="${1}"

    mycmd.bin_execute sed -i \
        -e "1s/.*/#!\/usr\/bin\/env -S mycmd/" \
        -e "2s/.*/# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-/" \
        -e "3s/.*/# shellcheck shell=bash\n/" \
        "${command_file}"
}

function migrate.remove-auto-source-mycmd-libs() {
    local -r command_file="${1}"

    mycmd.bin_execute sed -i '/mycmd\.auto_source_mycmd_libs/{N;d;}' "${command_file}"
}

function migrate.remove-source-mycmd-lib() {
    local -r command_file="${1}"

    # shellcheck disable=SC2016
    mycmd.bin_execute sed -i '/\[ -z "\${MYCMD_SYSTEM_BASE_DIR-}" \] && {/,/source "${MYCMD_SYSTEM_BASE_DIR}\/mycmd-lib"/d' \
        "${command_file}"
}

function migrate.mycmd-bin-to-mycmd-bin-execute() {
    local -r file="${1}"

    mycmd.bin_execute sed -E -i \
        's/(")?\$\{MYCMD_BIN\[(")?([^"]+)(")?\]\}(")? /mycmd.bin_execute \3 /g' "${file}"
}

function migrate.remove-explicit-call-to-main() {
    local -r command_file="${1}"

    mycmd.bin_execute sed -i '/^main.*\$@/d' "${command_file}"
    # shellcheck disable=SC2016
    mycmd.bin_execute sed -i '${/^$/d;}' "${command_file}"
}

function migrate.rename-main-to-mycmd-main() {
    local -r command_file="${1}"

    mycmd.bin_execute sed -i 's/main()/mycmd.main()/' "${command_file}"
}

mycmd.trace "The MyCmd Migrate command group library has been sourced."
